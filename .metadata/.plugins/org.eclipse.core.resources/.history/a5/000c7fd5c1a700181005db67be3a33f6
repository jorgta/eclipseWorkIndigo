package com.struts2.actions;




import java.util.*;

import javax.servlet.http.HttpServletRequest;
//import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.hibernate.SessionFactory;
import org.hibernate.Transaction;

import org.apache.struts2.ServletActionContext;

//import org.springframework.orm.hibernate3.support.OpenSessionInViewFilter;
 



import com.opensymphony.xwork2.ActionSupport;

import com.struts2.Beans.*;
import com.bituos.*;

import org.hibernate.classic.Session;

public class IndexAction extends ActionSupport  {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2072003053543010332L;
	/**
	 * 
	 */

	private HttpSession httpSession =null;
    private HttpServletRequest request = null;
 
	
    
    
	
	public void validate() {	


}

	
	public String  execute() throws Exception  {

			String forward=SUCCESS;

			HttpServletRequest request = ServletActionContext.getRequest();
			httpSession = request.getSession(); 
			 
			Config config = new Config( request );
			
			
			SessionFactory sessionFactory = null;
			
			Session    session = null;
			Transaction tx = null;
		
			 
				
			try 
			  {

				                   
				//sessionFactory = config.getConfiguration(request).buildSessionFactory();
				sessionFactory = config.getConfiguration(  ).buildSessionFactory();
				//sessionFactory = HibernateUtil.getSessionFactory();
				session = sessionFactory.openSession();			
			
				String query =   " FROM BeanModule u";  
					
				List list = session.createQuery(query).list();
					
				if (!list.isEmpty()){   
					
					//
						
					}
	
				}
				else
				  {
					  //errors.add("username", new org.apache.struts.action.ActionError("error.notexist.username"));
					  //com.bituos.Error error = new com.bituos.Error("Usuario inexistente o contraseña incorrecta.", request);
					  httpSession.setAttribute("done", new String("login.jsp"));
					  forward = ERROR;
				  }
		  } 
		catch (Exception e) 
		  {
			e.printStackTrace();
			
			//com.bituos.Error error = new com.bituos.Error( e.getMessage(), request);
							
			forward = ERROR;
						
			//errors.add("unknown", new org.apache.struts.action.ActionError("error.unknow"));
		  }
		finally	
		  {
			if ( session != null )
				 session.close(); 
				  
			if ( sessionFactory != null )
				 sessionFactory.close();
		  }

		// Write logic determining how the user should be forwarded.

		/*if (forward !="") {
			
			forward = ERROR;
		}
		else 
		   forward = "links";*/


		// Finish with
		return (forward);

	}
	


	
	
	


}
